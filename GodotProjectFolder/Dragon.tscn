[gd_scene load_steps=18 format=3 uid="uid://bautauxojp85q"]

[ext_resource type="PackedScene" uid="uid://xpltqydap5h" path="res://dragonbody0.glb" id="1_ouhgp"]
[ext_resource type="Shader" path="res://toonShader.gdshader" id="2_bcq6s"]
[ext_resource type="Texture2D" uid="uid://b6vnfctluyu4y" path="res://Face Textures/goathead1.png" id="3_71l3m"]
[ext_resource type="Texture2D" uid="uid://bpqcxvthf6ppq" path="res://Face Textures/goathead2.png" id="4_wjad6"]
[ext_resource type="Texture2D" uid="uid://cvw358j6weok4" path="res://Face Textures/goathead3.png" id="5_g3kkn"]
[ext_resource type="Texture2D" uid="uid://btvjkeqp06f0" path="res://Face Textures/goathead4.png" id="6_627jj"]
[ext_resource type="Texture2D" uid="uid://bk5gw0g37dhh5" path="res://Face Textures/goathead5.png" id="7_u8shq"]
[ext_resource type="Texture2D" uid="uid://cbcob4gn8xams" path="res://Face Textures/goathead6.png" id="8_c6dri"]
[ext_resource type="Texture2D" uid="uid://bfapjj0hwws2j" path="res://Face Textures/goathead7.png" id="9_h421s"]
[ext_resource type="Texture2D" uid="uid://cjo28ngm1oxe" path="res://Face Textures/goathead8.png" id="10_8nuej"]
[ext_resource type="Script" path="res://Head.gd" id="11_glktf"]

[sub_resource type="SkeletonModificationStack3D" id="SkeletonModificationStack3D_uhv04"]
enabled = true
modification_count = 1

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ns0ty"]
render_priority = 0
shader = ExtResource("2_bcq6s")
shader_parameter/base_color = Color(0.764706, 0.764706, 0.811765, 1)
shader_parameter/rim_softness = 0.05
shader_parameter/rim_spread = 0.5
shader_parameter/rim_threshold = 0.25
shader_parameter/rim_tint = Color(0.75, 0.75, 0.75, 0.75)
shader_parameter/shade_color = Color(0.505882, 0.560784, 0.639216, 1)
shader_parameter/shade_softness = 0.0
shader_parameter/shade_threshold = 0.0
shader_parameter/shadow_softness = 0.0
shader_parameter/shadow_threshold = 0.7
shader_parameter/specular_glossiness = 15.0
shader_parameter/specular_softness = 0.1
shader_parameter/specular_threshold = 0.5
shader_parameter/specular_tint = Color(0.75, 0.75, 0.75, 0.75)
shader_parameter/use_light = false
shader_parameter/use_rim = false
shader_parameter/use_shade = false
shader_parameter/use_shadow = false
shader_parameter/use_specular = false

[sub_resource type="Shader" id="Shader_anvn3"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.beta7's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_always,cull_back,unshaded;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_disable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_disable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest,repeat_disable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	POINT_SIZE = point_size;
	
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	MODELVIEW_MATRIX = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], INV_VIEW_MATRIX[1], INV_VIEW_MATRIX[2], MODEL_MATRIX[3]);
	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
	
	// Perspective scale clamping (to reduce distortion from upscaling)
	float s = -(MODELVIEW_MATRIX)[3].z / PROJECTION_MATRIX[0][0];
	float w = (VIEWPORT_SIZE.x / 2.) * 0.05;//half the viewport width * max size (sprite pixel size)
	float max_size_thresh = 8.;
	float min_size_thresh = 3.;
	if (s < w - min_size_thresh) {
		float scale = s / (w - min_size_thresh);
		POINT_SIZE = point_size / scale;
	} if (s > w + max_size_thresh) {
		float scale = s / (w + max_size_thresh);
		POINT_SIZE = point_size / scale;
	}

}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,POINT_COORD);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	ALPHA *= albedo.a * albedo_tex.a;
	if (ALPHA != 1.) {
		discard;
	}
}
"

[sub_resource type="AnimatedTexture" id="AnimatedTexture_o6crd"]
frames = 8
pause = true
frame_0/texture = ExtResource("3_71l3m")
frame_1/texture = ExtResource("4_wjad6")
frame_1/duration = 1.0
frame_2/texture = ExtResource("5_g3kkn")
frame_2/duration = 1.0
frame_3/texture = ExtResource("6_627jj")
frame_3/duration = 1.0
frame_4/texture = ExtResource("7_u8shq")
frame_4/duration = 1.0
frame_5/texture = ExtResource("8_c6dri")
frame_5/duration = 1.0
frame_6/texture = ExtResource("9_h421s")
frame_6/duration = 1.0
frame_7/texture = ExtResource("10_8nuej")
frame_7/duration = 1.0

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vxhhc"]
render_priority = 0
shader = SubResource("Shader_anvn3")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/metallic = 0.0
shader_parameter/metallic_texture_channel = Plane(1, 0, 0, 0)
shader_parameter/point_size = 64.0
shader_parameter/roughness = 1.0
shader_parameter/specular = 0.5
shader_parameter/texture_albedo = SubResource("AnimatedTexture_o6crd")
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)

[sub_resource type="PointMesh" id="PointMesh_vu164"]
material = SubResource("ShaderMaterial_vxhhc")

[node name="Dragon" instance=ExtResource("1_ouhgp")]

[node name="Skeleton3D" parent="Armature" index="0"]
modification_stack = SubResource("SkeletonModificationStack3D_uhv04")

[node name="Cylinder" parent="Armature/Skeleton3D" index="0"]
material_override = SubResource("ShaderMaterial_ns0ty")

[node name="BoneAttachment3D" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="1"]
transform = Transform3D(1, -1.02597e-16, 3.70924e-19, 3.70931e-19, 0.00723064, 0.999974, -1.02597e-16, -0.999974, 0.00723064, -3.26298e-18, -0.0146954, 6.75989)
bone_name = "seg0"
bone_idx = 0

[node name="Head" type="MeshInstance3D" parent="Armature/Skeleton3D/BoneAttachment3D" index="0"]
transform = Transform3D(1, -1.52201e-22, 7.75482e-25, 7.94093e-23, 1, -1.39698e-09, 3.10193e-25, 1.39698e-09, 1, -2.56335e-17, -0.248973, 0.241602)
extra_cull_margin = 10.0
mesh = SubResource("PointMesh_vu164")
skeleton = NodePath("../..")
script = ExtResource("11_glktf")
